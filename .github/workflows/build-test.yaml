name: Build and Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend-build:
    name: Backend Build & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'
      
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-
      
      - name: Build application
        run: mvn clean package -DskipTests=true
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: backend/target/*.jar
          retention-days: 7

  frontend-build:
    name: Frontend Build & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web-app
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web-app/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linting
        run: npm run lint
        continue-on-error: true
      
      - name: Build application
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: web-app/.next/
          retention-days: 7

  # Optional: Job that runs only if both builds succeed
  build-status:
    name: Build Status
    needs: [backend-build, frontend-build]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check build results
        run: |
          if [[ "${{ needs.backend-build.result }}" == "success" && "${{ needs.frontend-build.result }}" == "success" ]]; then
            echo "✅ All builds successful!"
          else
            echo "❌ Some builds failed:"
            echo "Backend: ${{ needs.backend-build.result }}"
            echo "Frontend: ${{ needs.frontend-build.result }}"
            exit 1
          fi